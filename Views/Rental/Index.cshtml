@model dynamic

@{
    ViewBag.Title = "New Rental Form";
}

<h2>New Rental Form</h2>

<form id="newRental">
    <div class="d-grid gap-3">

        <div class="form-group">
            <label>Customer</label>
            <div class="tt-container">
                <input id="customer" type="text" value="" class="form-control" />
            </div>
        </div>

        <div class="form-group">
            <label>Movie</label>
            <div class="tt-container">
                <input id="movie" type="text" value="" class="form-control" />
            </div>
        </div>

        <div class="row">
            <div class="col-md-4 col-sm-4">
                <ul id="movies" class="list-group">Orders Added:</ul>
            </div>
        </div>

        <div class="form-group">
            <button class="btn btn-primary">Submit</button>
        </div>

    </div>
</form>
@section scripts
{
    <script>
/*const toastr = require("../../Scripts/toastr");*/

        $(Document).ready(function () {

            var vm = {
                customerId: 0,
                movieId: []
            };

            var customers = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: '/api/customers?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#customer').typeahead({
                minLength: 1,
                highlight: true
            }, {
                name: 'customers',
                display: 'name',
                source: customers
            }).on("typeahead:select", function (e, customer) {
                vm.customerId = customer.id;
            });

            var movies = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: '/api/movies?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#movie').typeahead({
                minLength: 1,
                highlight: true
            }, {
                name: 'movies',
                display: 'name',
                source: movies
            }).on("typeahead:select", function (e, movie) {
                //this DOM manipulation method can lead to noise, suggest using data-binding frameworks e.g. angular/react
                $("#movies").append("<li class='list-group-item'>" + movie.name + "</li>");
                //creates text box containing the added movie 
                $("#movie").typeahead("val", "");

                vm.movieId.push(movie.id);
            });

            $("#newRental").submit(function (e) {
                e.preventDefault();

                $.ajax({
                    url: "/api/newRentals",
                    method: "post",
                    data: vm
                })
                    .done(function () {
                        toastr.success("Rental order successfully created!");
                    })
                    .fail(function () {
                        toastr.error("Rental order unable to be created!");
                    })

            });


        });
    </script>
    }