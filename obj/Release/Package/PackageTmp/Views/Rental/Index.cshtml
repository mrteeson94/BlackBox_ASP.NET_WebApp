@model dynamic

@{
    ViewBag.Title = "New Rental Form";
}

<h2>New Rental Form</h2>

<form id="newRental">
    <div class="d-grid gap-3">

        <div class="form-group">
            <label>Customer</label>
            <div class="tt-container">
                <input id="customer" name="customer" data-rule-validCustomer="true" required type="text" value="" class="form-control" />
            </div>
        </div>

        <div class="form-group">
            <label>Movie</label>
            <div class="tt-container">
                <input id="movie" name="movie" data-rule-movieSelection="true" required type="text" value="" class="form-control" />
            </div>
        </div>

        <div class="row">
            <div class="col-md-4 col-sm-4">
                <ul id="movies" class="list-group">Orders Added:</ul>
            </div>
        </div>

        <div class="form-group">
            <button class="btn btn-primary">Submit</button>
        </div>

    </div>
</form>
@section scripts
{
    @Scripts.Render("~/bundles/jqueryval") 
    <script>
        $(Document).ready(function () {
            //viewmodel of RentalDto 
            var vm = {
                customerId: 0,
                movieId: []
            };
            //main typeahead logic for loading customer and movie option in respective text field
            var customers = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: '/api/customers?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#customer').typeahead({
                minLength: 1,
                highlight: true
            }, {
                name: 'customers',
                display: 'name',
                source: customers
            }).on("typeahead:select", function (e, customer) {
                vm.customerId = customer.id;
            });

            var movies = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: '/api/movies?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#movie').typeahead({
                minLength: 1,
                highlight: true
            }, {
                name: 'movies',
                display: 'name',
                source: movies
            }).on("typeahead:select", function (e, movie) {
                //this DOM manipulation method can lead to noise, suggest using data-binding frameworks e.g. angular/react
                $("#movies").append("<li class='list-group-item'>" + movie.name + "</li>");
                //creates text box containing the added movie 
                $("#movie").typeahead("val", "");

                vm.movieId.push(movie.id);
            });


            $.validator.addMethod("validCustomer", function () {
                console.log("made into validation")
                return vm.customerId && vm.customerId !== 0;
            }, "Please select a valid customer.");

            $.validator.addMethod("moveSelection", function () {
                console.log("check movie selection");
                return vm.movieId.length > 0;
            }, "Please select at least one movie.");

            console.log("passed validation code");
            //validate form via checking customer text input field
            //Submit function on btn passing viewmodel + toastr notification on function completition.
            var validator = $("#newRental").validate({
                submitHandler: function () {
                    console.log("passed btn before ajax");
                    $.ajax({
                        url: "/api/newRentals",
                        method: "post",
                        data: vm
                    })
                        .done(function () {
                            console.log("success!")
                            toastr.success("Rental order successfully created!");
                            //reset form
                            $("#customer").typeahead("val", "");
                            $("#movie").typeahead("val", "");
                            $("#movies").empty();

                            vm = {
                                customerId: 0,
                                movieId: []
                            };

                            validator.resetForm();
                        })

                        .fail(function () {
                            console.log("failed")
                            toastr.error("Rental order unable to be created!");
                        });
                    return false;
                }
            });

        });
    </script>
    }